/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tugaslogin;
import java.awt.HeadlessException;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Jerry
 */
public class CRUD extends javax.swing.JFrame {

    DefaultTableModel model;
    /**
     * Creates new form CRUD
     */
    public CRUD() {
        initComponents();
        
        cboWarna.setSelectedIndex(-1);
        cboTahun.setSelectedIndex(-1);
        txtKode.requestFocus();
        
        String []judul = {"Merk", "Kode Mobil", "Tahun Keluar", "Warna", "Jenis Kursi"};
        model = new DefaultTableModel(judul,0);
        tbListrik.setModel(model);
        
        tampilData();
        
         tbListrik.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int selectedRow = tbListrik.getSelectedRow();
                if(selectedRow != -1) {
                    String merk = model.getValueAt(selectedRow, 0).toString();
                    String kode = model.getValueAt(selectedRow, 1).toString();
                    String tahun = model.getValueAt(selectedRow, 2).toString();
                    String warna = model.getValueAt(selectedRow, 3).toString();
                    String kursi = model.getValueAt(selectedRow, 4).toString();
                    
                    txtMerk.setText(merk);
                    txtKode.setText(kode);
                    
                    cboTahun.setSelectedItem(tahun);
                    cboWarna.setSelectedItem(warna);
                    
                    if(kursi.equals("Family Seat")) {
                        rbFamily.setSelected(true);
                    }
                    else {
                        rbRacer.setSelected(true);
                    }

                    txtKode.setEditable(false);
                }
            }
         });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgKursi = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtMerk = new javax.swing.JTextField();
        rbFamily = new javax.swing.JRadioButton();
        rbRacer = new javax.swing.JRadioButton();
        cboTahun = new javax.swing.JComboBox<>();
        cboWarna = new javax.swing.JComboBox<>();
        txtKode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListrik = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bgKursi.add(rbFamily);
        rbFamily.setText("Family Seat");

        bgKursi.add(rbRacer);
        rbRacer.setText("Racer Seat");

        cboTahun.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2008", "2012", "2015", "2017", "2020" }));
        cboTahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTahunActionPerformed(evt);
            }
        });

        cboWarna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Red", "White", "Blue", "Violet", "Black" }));

        jLabel1.setText("Merk :");

        jLabel2.setText("Car Code :");

        jLabel3.setText("Tahun Keluar :");

        jLabel4.setText("Warna :");

        jLabel5.setText("Model Kursi :");

        tbListrik.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbListrik);

        jLabel6.setText("Search Some Data :");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnExit.setText("Get Out");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel7.setText("Program Pendataan Mobil Listrik 2023");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(275, 275, 275))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnClear)
                        .addGap(52, 52, 52)
                        .addComponent(btnCreate)
                        .addGap(57, 57, 57)
                        .addComponent(btnUpdate)
                        .addGap(61, 61, 61)
                        .addComponent(btnDelete)
                        .addGap(66, 66, 66)
                        .addComponent(btnExit))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbFamily)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbRacer))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cboWarna, javax.swing.GroupLayout.Alignment.LEADING, 0, 135, Short.MAX_VALUE)
                                .addComponent(cboTahun, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtKode, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMerk, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel7)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMerk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboWarna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbFamily)
                            .addComponent(rbRacer)
                            .addComponent(jLabel5))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCreate)
                        .addComponent(btnClear))
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnExit))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void cboTahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTahunActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        int row = tbListrik.getRowCount();
        for (int i=0; i<row; i++){
        model.removeRow(0);}
        
        try {
            if(txtSearch.getText() != null){
                String query = "SELECT * FROM tbkategori WHERE kodemobil like '%" + txtSearch.getText() + "%'";
                Connection conn = Configuration.getConnection();
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(query);
                while(rs.next()){
                String data [] = {rs.getString(1), rs.getString(2), rs.getString(3),rs.getString(4), rs.getString(5)};
                model.addRow(data);                      
                }
            }
            else{
                tampilData();
            }
            
        } catch (Exception e) {            
            System.out.println("Data Gagal Terbaca !");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String merk = txtMerk.getText();
        String kode = txtKode.getText();
        String tahun = (String) cboTahun.getSelectedItem();
        String warna = (String) cboWarna.getSelectedItem();
        String kursi = rbFamily.isSelected() ? "Family Seat" : "Racer Seat";

        if (merk.isEmpty() || kode.isEmpty() || tahun.isEmpty() || warna.isEmpty() || bgKursi.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Harap lengkapi semua data!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                try (Connection conn = Configuration.getConnection()) {
                    String query = "SELECT * FROM tbkategori WHERE kodemobil = ?";
                    PreparedStatement stmt = conn.prepareStatement(query);
                    stmt.setString(1, kode);
                    ResultSet rs = stmt.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(this, "Kode Mobil telah terdaftar", "Peringatan", JOptionPane.WARNING_MESSAGE);
                    } else {
                        // Insert user information into the database
                        query = "INSERT INTO tbkategori (merk, kodemobil, tahunkeluar, warna, tipekursi) VALUES (?, ?, ?, ?, ?)";
                        stmt = conn.prepareStatement(query);
                        stmt.setString(1, merk);
                        stmt.setString(2, kode);
                        stmt.setString(3, tahun);
                        stmt.setString(4, warna);
                        stmt.setString(5, kursi);
                        stmt.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                        clear();
                        tampilData();
                    }
                }
            } catch (SQLException ex) {
                System.out.println("Data Gagal Ditambahkan !");
            }
        }          // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clear();        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(tbListrik.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "Klik Data Mobil Terlebih Dahulu !", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String merk = txtMerk.getText();
        String kode = txtKode.getText();
        
        String tahun = (String) cboTahun.getSelectedItem();
        String warna = (String) cboWarna.getSelectedItem();
        
        String kursi = rbFamily.isSelected()? "Family Seat" : "Racer Seat";
                     
        try {           
            String query = "UPDATE tbkategori SET kodemobil = '" + kode + "', merk = '" + merk + "', tahunkeluar = '" + tahun + "', warna = '" + warna + "', "
                        + "tipekursi = '" + kursi + "'" + "WHERE kodemobil = '" + txtKode.getText() +"'";
            
            Connection conn = Configuration.getConnection();
            Statement st = conn.createStatement();
            st.execute(query);
            JOptionPane.showMessageDialog(null,"Data Berhasil Diupdate", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            tampilData();
        } catch (Exception e) {
           System.out.println("Data Gagal Diupdate !");
        }  
        clear();
          // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(tbListrik.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this, "Klik Data Mobil Terlebih Dahulu !", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {           
            String query = "DELETE FROM tbkategori WHERE kodemobil = '" +txtKode.getText()+"'";
            
            Connection conn = Configuration.getConnection();
            Statement st = conn.createStatement();
            st.execute(query);
            JOptionPane.showMessageDialog(null,"Data Berhasil Dihapus", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            tampilData();
        } catch (Exception e) {
           System.out.println("Data Gagal Dihapus !");
        }
        clear();        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgKursi;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboTahun;
    private javax.swing.JComboBox<String> cboWarna;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbFamily;
    private javax.swing.JRadioButton rbRacer;
    private javax.swing.JTable tbListrik;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtMerk;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    
    private void tampilData(){
        int row = tbListrik.getRowCount();
        for (int i=0; i<row; i++){
        model.removeRow(0);}

    try {
            String query = "SELECT * FROM tbkategori";
            Connection conn = Configuration.getConnection();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            while(rs.next()){
                String data [] = {rs.getString(1), rs.getString(2), rs.getString(3),rs.getString(4), rs.getString(5)};
                model.addRow(data);                      
            }
        } catch (Exception e) {            
            System.out.println("Data Gagal Terbaca !");
        }
    }
    
    private void clear(){
        txtMerk.setText("");
        txtKode.setText("");
        cboTahun.setSelectedIndex(-1);
        cboWarna.setSelectedIndex(-1);
        bgKursi.clearSelection();
    }
}


